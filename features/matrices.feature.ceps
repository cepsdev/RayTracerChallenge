


Scenario{
     title{label __chapter__3_scenario_1 title = "Constructing and inspecting a 4x4 matrix";};
     Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0;
            5.5; 6.5; 7.5; 8.5;
            9.0; 10.0; 11.0; 12.0;
            13.5; 14.5; 15.5; 16.5;
         }
         ;});
     };
     Then{mat.matrix.data.content().at(0) == 1.0;};
     And{mat.matrix.data.content().at(3) == 4.0;};
     And{mat.matrix.data.content().at(4) == 5.5;};
     And{mat.matrix.data.content().at(6) == 7.5;};
     And{mat.matrix.data.content().at(10) == 11.0;};
     And{mat.matrix.data.content().at(12) == 13.5;};
     And{mat.matrix.data.content().at(14) == 15.5;};
};

Scenario{
     title{label __chapter__3_scenario_2 title = "A 2x2 matrix ought to be represenable";};
     Given{
         let mat = rt_obj(matrix{
         dim{2;2;};
         data{
            -3.0; 5.0; 
            1.0; -2.0;
         }
         ;});
     };
     Then{mat.matrix.data.content().at(0) == -3.0;};
     And{mat.matrix.data.content().at(1) == 5.0;};
     And{mat.matrix.data.content().at(2) == 1.0;};
     And{mat.matrix.data.content().at(3) == -2.0;};
};

Scenario{
     title{label __chapter__3_scenario_3 title = "Matrix equality with identical matrices";};
     Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         };});
     };
     And{
         let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         }
         ;});1;
     };
     Then{rt_op(approx_equal{mat1;mat2;});};
};

Scenario{
     title{label __chapter__3_scenario_4 title = "Matrix equality with different matrices";};
     Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         };});
     };
     And{
         let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            2.0; 3.0; 4.0; 5.0; 
            6.0; 7.0; 8.0; 9.0;
            8.0; 7.0; 6.0; 5.0;
            4.0; 3.0; 2.0; 1.0;
         }
         ;});1;
     };
     Then{!rt_op(approx_equal{mat1;mat2;});};
};

Scenario{
     title{label __chapter__3_scenario_5 title = "Multiplying two matrices";};
     Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         };});
     };
     And{
         let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            -2.0; 1.0; 2.0; 3.0; 
            3.0; 2.0; 1.0; -1.0;
            4.0; 3.0; 6.0; 5.0;
            1.0; 2.0; 7.0; 8.0;
         }
         ;});1;
     };
     Then{
        let mat = rt_obj(matrix{dim{4;4;};data{
            20.0;22.0;50.0;48.0;
            44.0;54.0;114.0;108.0;
            40.0;58.0;110.0;102.0;
            16.0;26.0;46.0;42.0;
        };});
        rt_op(approx_equal{ rt_op(multiply{mat1;mat2;}) ;mat;});};
};

Scenario{
    title{label __chapter__3_scenario_6 title = "A matrix multipled by a tuple";};
     Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            2.0; 4.0;4.0;2.0;
            8.0;6.0;4.0;1.0;
            0.0;0.0;0.0;1.0;
         };});
     };
     And{
        let tup = rt_obj(tuple{1.0;2.0;3.0;1.0;});
        1;
    };
    ">>>>>>>>>>>>>";
    ">>>>>>>>>>>>>";
    rt_op(multiply{mat;tup;});
    Then{
        rt_op(approx_equal{tuple{18.0;24.0;33.0;1.0;};rt_op(multiply{mat;tup;}); } );
    };
};


let skip_summary = 0;
let summary_only_failures = 0;

