let skip_summary = 0;
let summary_only_failures = 0;



Scenario{
     title{label __chapter__3_scenario_1 title = "Constructing and inspecting a 4x4 matrix";};
     Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0;
            5.5; 6.5; 7.5; 8.5;
            9.0; 10.0; 11.0; 12.0;
            13.5; 14.5; 15.5; 16.5;
         }
         ;});
     };
     Then{mat.matrix.data.content().at(0) == 1.0;};
     And{mat.matrix.data.content().at(3) == 4.0;};
     And{mat.matrix.data.content().at(4) == 5.5;};
     And{mat.matrix.data.content().at(6) == 7.5;};
     And{mat.matrix.data.content().at(10) == 11.0;};
     And{mat.matrix.data.content().at(12) == 13.5;};
     And{mat.matrix.data.content().at(14) == 15.5;};
};

Scenario{
     title{label __chapter__3_scenario_2 title = "A 2x2 matrix ought to be represenable";};
     Given{
         let mat = rt_obj(matrix{
         dim{2;2;};
         data{
            -3.0; 5.0; 
            1.0; -2.0;
         }
         ;});
     };
     Then{mat.matrix.data.content().at(0) == -3.0;};
     And{mat.matrix.data.content().at(1) == 5.0;};
     And{mat.matrix.data.content().at(2) == 1.0;};
     And{mat.matrix.data.content().at(3) == -2.0;};
};

Scenario{
     title{label __chapter__3_scenario_3 title = "Matrix equality with identical matrices";};
     Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         };});
     };
     And{
         let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         }
         ;});1;
     };
     Then{rt_op(approx_equal{mat1;mat2;});};
};

Scenario{
     title{label __chapter__3_scenario_4 title = "Matrix equality with different matrices";};
     Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         };});
     };
     And{
         let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            2.0; 3.0; 4.0; 5.0; 
            6.0; 7.0; 8.0; 9.0;
            8.0; 7.0; 6.0; 5.0;
            4.0; 3.0; 2.0; 1.0;
         }
         ;});1;
     };
     Then{!rt_op(approx_equal{mat1;mat2;});};
};

Scenario{
     title{label __chapter__3_scenario_5 title = "Multiplying two matrices";};
     Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            5.0; 6.0;7.0;8.0;
            9.0;8.0;7.0;6.0;
            5.0;4.0;3.0;2.0;
         };});
     };
     And{
         let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            -2.0; 1.0; 2.0; 3.0; 
            3.0; 2.0; 1.0; -1.0;
            4.0; 3.0; 6.0; 5.0;
            1.0; 2.0; 7.0; 8.0;
         }
         ;});1;
     };
     Then{
        let mat = rt_obj(matrix{dim{4;4;};data{
            20.0;22.0;50.0;48.0;
            44.0;54.0;114.0;108.0;
            40.0;58.0;110.0;102.0;
            16.0;26.0;46.0;42.0;
        };});
        rt_op(approx_equal{ rt_op(multiply{mat1;mat2;}) ;mat;});};
};

Scenario{
    title{label __chapter__3_scenario_6 title = "A matrix multiplied by a tuple";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 2.0; 3.0; 4.0; 
            2.0; 4.0;4.0;2.0;
            8.0;6.0;4.0;1.0;
            0.0;0.0;0.0;1.0;
         };});
     };
     And{
        let tup = rt_obj(tuple{1.0;2.0;3.0;1.0;});
        1;
    };
    Then{
        rt_op(approx_equal{tuple{18.0;24.0;33.0;1.0;};rt_op(multiply{mat;tup;}); } );
    };
};

Scenario{
    title{label __chapter__3_scenario_7 title = "Multiplying a matrix by the identity matrix (1)";};
    Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            0.0; 1.0; 2.0; 4.0; 
            1.0; 2.0;4.0;8.0;
            2.0;4.0;8.0;16.0;
            4.0;8.0;16.0;32.0;
         };});
     };
     And{
        let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 0.0; 0.0;0.0; 
            0.0; 1.0;0.0;0.0;
            0.0;0.0;1.0;0.0;
            0.0;0.0;0.0;1.0;
         };});
        1;
    };
    Then{
        rt_op(approx_equal{mat1;;rt_op(multiply{mat2;mat1;}); } );
    };
};

Scenario{
    title{label __chapter__3_scenario_7_ex title = "Multiplying a matrix by the identity matrix (2)";};
    Given{
         let mat1 = rt_obj(matrix{
         dim{4;4;};
         data{
            0.0; 1.0; 2.0; 4.0; 
            1.0; 2.0;4.0;8.0;
            2.0;4.0;8.0;16.0;
            4.0;8.0;16.0;32.0;
         };});
     };
     And{
        let mat2 = rt_obj(matrix{id;});
        1;
    };
    Then{
        rt_op(approx_equal{mat1;;rt_op(multiply{mat2;mat1;}); } );
    };
};

Scenario{
    title{label __chapter__3_scenario_8 title = "Transposing a matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            0.0; 9.0; 3.0; 0.0; 
            9.0; 8.0;0.0;8.0;
            1.0;8.0;5.0;3.0;
            0.0;0.0;5.0;8.0;
         };});
     };
    Then{
        let mat1 = rt_op(transpose{mat;});
        let mat2 = rt_obj(matrix{
         dim{4;4;};
         data{
            0.0; 9.0; 1.0; 0.0; 
            9.0; 8.0;8.0;0.0;
            3.0;0.0;5.0;5.0;
            0.0;8.0;3.0;8.0;
         };});
        rt_op(approx_equal{mat1;mat2;} );
    };
};

Scenario{
    title{label __chapter__3_scenario_9 title = "Transposing the identity matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            1.0; 0.0; 0.0; 0.0; 
            0.0; 1.0;0.0;0.0;
            0.0;0.0;1.0;0.0;
            0.0;0.0;0.0;1.0;
         };});
     };
    Then{
        let mat1 = rt_op(transpose{mat;});
        rt_op(approx_equal{mat1;mat;} );
    };
};

Scenario{
    title{label __chapter__3_scenario_10 title = "Calculating the determinant of a 2x2 matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{2;2;};
         data{
            1.0; 5.0; 
            -3.0; 2.0;
         };});
     };
    Then{
        rt_op(approx_equal{17.0;rt_op(det{mat;});});
    };
};

Scenario{
    title{label __chapter__3_scenario_11 title = "A submatrix of a 3x3 matrix is a 2x2 matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{3;3;};
         data{
            1.0; 5.0;0.0; 
            -3.0; 2.0;7.0;
            0.0; 6.0; -3.0;
         };});
     };
    Then{
        let mat1 = rt_obj(matrix{
         dim{3;3;};
         data{
            -3.0; 2.0;
            0.0; 6.0;
         };});
        rt_op(approx_equal{mat1;rt_op(sub_matrix{mat;0;2;});});
    };
};

Scenario{
    title{label __chapter__3_scenario_12 title = "A submatrix of a 4x4 matrix is a 3x3 matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            -6.0; 1.0;1.0; 6.0;
            -8.0; 5.0; 8.0;6.0;
            -1.0;0.0;8.0;2.0;
            -7.0;1.0;-1.0;1.0;
         };});
     };
    Then{
        let mat1 = rt_obj(matrix{
         dim{3;3;};
         data{
            -6.0; 1.0;6.0;
            -8.0; 8.0;6.0;
            -7.0;-1.0;1.0;
         };});
        rt_op(approx_equal{mat1;rt_op(sub_matrix{mat;2;1;});});
    };
};

Scenario{
    title{label __chapter__3_scenario_13 title = "Calculating a minor of a 3x3 matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{3;3;};
         data{
            3.0;5.0;0.0;
            2.0;-1.0;-7.0;
            6.0;-1.0;5.0;
         };});
     };
     And{
        let mat1 = rt_op(sub_matrix{mat;1;0;});1;
     };
     Then{
       rt_op(approx_equal{25.0;rt_op(det{mat1;});}); 
     };
     And{
       rt_op(approx_equal{25.0;rt_op(minor{mat;1;0;});}); 
     };
};

Scenario{
    title{label __chapter__3_scenario_14 title = "Calculating a cofactor of a 3x3 matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{3;3;};
         data{
            3.0;5.0;0.0;
            2.0;-1.0;-7.0;
            6.0;-1.0;5.0;
         };});
     };
     Then{
       rt_op(
        approx_equal{
             -12.0;
             rt_op(
                 minor{mat;0;0;}
             );
        }
       ); 
     };
    And{
       rt_op(
        approx_equal{
             -12.0;
             rt_op(
                 cofactor{mat;0;0;}
             );
        }
       ); 
     };
     And{
       rt_op(
        approx_equal{
             25.0;
             rt_op(
                 minor{mat;1;0;}
             );
        }
       ); 
     };
    And{
       rt_op(
        approx_equal{
             -25.0;
             rt_op(
                 cofactor{mat;1;0;}
             );
        }
       ); 
     };
};


Scenario{
    title{label __chapter__3_scenario_15 title = "Calculating the determinant of a 3x3 matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{3;3;};
         data{
            1.0;2.0;6.0;
            -5.0;8.0;-4.0;
            2.0;6.0;4.0;
         };});
     };
     Then{
       rt_op(
        approx_equal{
             56.0;
             rt_op(
                 cofactor{mat;0;0;}
             );
        }
       ); 
     };
    And{
       rt_op(
        approx_equal{
             12.0;
             rt_op(
                 cofactor{mat;0;1;}
             );
        }
       ); 
     };
     And{
       rt_op(
        approx_equal{
             -46.0;
             rt_op(
                 cofactor{mat;0;2;}
             );
        }
       ); 
     };
    And{
       rt_op(
        approx_equal{
             -196.0;
             rt_op(
                 det{mat;}
             );
        }
       ); 
     };

};



Scenario{
    title{label __chapter__3_scenario_16 title = "Calculating the determinant of a 4x4 matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            -2.0;-8.0;3.0;5.0;
            -3.0;1.0;7.0;3.0;
            1.0;2.0;-9.0;6.0;
            -6.0;7.0;7.0;-9.0;
         };});
     };
     Then{
       rt_op(
        approx_equal{
             690.0;
             rt_op(
                 cofactor{mat;0;0;}
             );
        }
       ); 
     };
    And{
       rt_op(
        approx_equal{
             447.0;
             rt_op(
                 cofactor{mat;0;1;}
             );
        }
       ); 
     };
     And{
       rt_op(
        approx_equal{
             210.0;
             rt_op(
                 cofactor{mat;0;2;}
             );
        }
       ); 
     };
     And{
       rt_op(
        approx_equal{
             51.0;
             rt_op(
                 cofactor{mat;0;3;}
             );
        }
       ); 
     };

    And{
       rt_op(
        approx_equal{
             -4071.0;
             rt_op(
                 det{mat;}
             );
        }
       ); 
     };

};

Scenario{
    title{label __chapter__3_scenario_17 title = "Testing an invertible matrix for invertibility";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            6.0;4.0;4.0;4.0;
            5.0;5.0;7.0;6.0;
            4.0;-9.0;3.0;-7.0;
            9.0;1.0;7.0;-6.0;
         };});
     };
     Then{
       rt_op(
        approx_equal{
             -2120.0;
             rt_op(
                 det{mat;}
             );
        }
       ); 
     };
    And{
       rt_op(
        invertible{
         mat;
        }
       ); 
     };
};


Scenario{
    title{label __chapter__3_scenario_18 title = "Testing a noninvertible matrix for invertibility";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            -4.0;2.0;-2.0;-3.0;
            9.0;6.0;2.0;6.0;
            0.0;-5.0;1.0;-5.0;
            0.0;0.0;0.0;0.0;
         };});
     };
     Then{
       rt_op(
        approx_equal{
             0.0;
             rt_op(
                 det{mat;}
             );
        }
       ); 
     };
    And{
       !rt_op(
        invertible{
         mat;
        }
       ); 
     };
};

Scenario{
    title{label __chapter__3_scenario_19 title = "Calculating the inverse of a matrix";};
    Given{
         let mat = rt_obj(matrix{
         dim{4;4;};
         data{
            -5.0;2.0;6.0;-8.0;
            1.0;-5.0;1.0;8.0;
            7.0;7.0;-6.0;-7.0;
            1.0;-3.0;7.0;4.0;
         };});
     };
     And{
        let mat1 = rt_op(inverse{mat;});1;
     };
     Then{
       rt_op(
        approx_equal{
             532.0;
             rt_op(
                 det{mat;}
             );
        }
       ); 
     };
    And{
       rt_op(
        approx_equal{
             -160.0;
             rt_op(
                 cofactor{mat;2;3;}
             );
        }
       ); 
     }; 
     And{
       rt_op(
        approx_equal{
             -160.0/532.0;
             mat1.matrix.data.content().at(14);
        }
       );       
     };
     And{
       rt_op(
        approx_equal{
             105.0;
             rt_op(
                 cofactor{mat;3;2;}
             );
        }
       ); 
     }; 
     And{
       rt_op(
        approx_equal{
             105.0/532.0;
             mat1.matrix.data.content().at(11);
        }
       );       
     };
     And{
       rt_op(
        approx_equal{
             mat1;
             matrix{
                dim{4;4;};
                data{
                    0.21805; 0.45113; 0.24060; -0.04511;
                    -0.80827; -1.45677; -0.44361; 0.52068;
                    -0.07895; -0.22368; -0.05263; 0.19737;
                    -0.52256; -0.81391; -0.30075; 0.30639;
                };
             };
        }
       );       
     };

};

















